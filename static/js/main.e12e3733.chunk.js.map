{"version":3,"sources":["components/TableRow/TableRow.tsx","components/TablePlayers/TablePlayers.tsx","App.tsx","index.tsx"],"names":["TableRow","player","score","TablePlayers","preparedPlayers","isByGrowthSort","orderSortHandler","Table","striped","bordered","hover","colSpan","length","scope","htmlFor","type","id","className","classNames","onClick","map","currentPlayer","index","App","useState","JSON","parse","sessionStorage","getItem","players","setPlayers","setIsByGrowthSort","useEffect","eventSource","EventSource","onmessage","event","newPlayer","data","currentPlayers","setItem","stringify","onerror","console","warn","close","sort","a","b","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAOaA,EAA4B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAClD,OACE,qCACE,6BAAKD,IACL,6BAAKC,QCIEC,EAAgC,SAAC,GAAD,IAC3CC,EAD2C,EAC3CA,gBACAC,EAF2C,EAE3CA,eACAC,EAH2C,EAG3CA,iBAH2C,OAK3C,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,kCACE,6BACE,oBAAIC,QAAS,EAAb,gCACmBP,EAAgBQ,YAGrC,+BACE,oBAAIC,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,SACE,wBAAOC,QAAQ,WAAf,kBAEE,wBACEC,KAAK,SACLC,GAAG,cACHC,UAAWC,IACX,CAAC,cAAeb,IAEhBc,QAAS,kBAAMb,kBAMzB,gCACKF,EAAgBgB,KAAI,SAACC,EAAuBC,GAC3C,IAAOrB,EAAiBoB,EAAjBpB,OAAQC,EAASmB,EAATnB,MAEf,OACE,6BACE,cAAC,EAAD,CACED,OAAQA,EACRC,MAAOA,KAHFoB,YCHNC,EAzCO,WACpB,MAA8BC,mBAAmBC,KAAKC,MAAMC,eAAeC,QAAQ,YAAc,OAAjG,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CN,mBAAkBC,KAAKC,MAAMC,eAAeC,QAAQ,cAAgB,SAAhH,mBAAOvB,EAAP,KAAuB0B,EAAvB,KAEAC,qBAAU,WACR,IAAMC,EAAc,IAAIC,YAAY,+CAEpCD,EAAYE,UAAY,SAASC,GAC/B,IAAMC,EAAYZ,KAAKC,MAAMU,EAAME,MAEnCR,GAAW,SAAAS,GAET,OADAZ,eAAea,QAAQ,UAAWf,KAAKgB,UAAL,sBAAmBF,GAAnB,CAAmCF,MAC/D,GAAN,mBAAWE,GAAX,CAA2BF,QAI/BJ,EAAYS,QAAU,WACpBC,QAAQC,KAAK,8BACbX,EAAYY,WAEb,IAUH,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,CACEb,gBAAe,YAAMyB,EAAQiB,MAAK,SAACC,EAAGC,GAAJ,OAAU3C,EAAiB0C,EAAE7C,MAAQ8C,EAAE9C,MAAQ8C,EAAE9C,MAAQ6C,EAAE7C,UAC7FG,eAAgBA,EAChBC,iBAbmB,WACvByB,GAAkB,WAGhB,OAFAJ,eAAea,QAAQ,YAAaf,KAAKgB,WAAWpC,KAE5CA,WC1Bd4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e12e3733.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  player: string,\n  score: number,\n};\n\nexport const TableRow: React.FC<Props> = ({ player, score }) => {\n  return (\n    <>\n      <td>{player}</td>\n      <td>{score}</td>\n    </>\n  )\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Table } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './TablePlayers.css';\nimport Player from '../../types/Player';\nimport { TableRow } from '../TableRow/TableRow';\n\ntype Props = {\n  preparedPlayers: Player[],\n  isByGrowthSort: boolean,\n  orderSortHandler: () => void,\n}\n\nexport const TablePlayers: React.FC<Props> = ({\n  preparedPlayers,\n  isByGrowthSort,\n  orderSortHandler\n}) => (\n  <Table striped bordered hover>\n    <thead>\n      <tr>\n        <td colSpan={2}>\n          {`Total count: ${preparedPlayers.length}`}\n        </td>\n      </tr>\n      <tr>\n        <th scope=\"col\">Player Name</th>\n        <th scope=\"col\">\n          <label htmlFor=\"sort-btn\">\n            Score\n            <button\n              type=\"button\"\n              id=\"sort-button\"\n              className={classNames(\n              {'arrow-down': !isByGrowthSort}\n              )}\n              onClick={() => orderSortHandler()}\n            ></button>\n          </label>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n        {preparedPlayers.map((currentPlayer: Player, index: number) => {\n          const {player, score} = currentPlayer;\n\n          return (\n            <tr key={index}>\n              <TableRow\n                player={player}\n                score={score}\n              />\n            </tr>\n          )\n        })}\n      </tbody>\n  </Table>\n);\n","import { useEffect, useState } from 'react';\n\nimport Player from './types/Player';\nimport { TablePlayers } from './components/TablePlayers/TablePlayers';\n\nconst App: React.FC = () => {\n  const [players, setPlayers] = useState<Player[]>(JSON.parse(sessionStorage.getItem('players') || '[]'));\n  const [isByGrowthSort, setIsByGrowthSort] = useState<boolean>(JSON.parse(sessionStorage.getItem('orderSort') || 'true'));\n\n  useEffect(() => {\n    const eventSource = new EventSource('https://players-score-server.herokuapp.com/');\n\n    eventSource.onmessage = function(event) {\n      const newPlayer = JSON.parse(event.data);\n\n      setPlayers(currentPlayers => {\n        sessionStorage.setItem('players', JSON.stringify([...currentPlayers, newPlayer]));\n        return [...currentPlayers, newPlayer]\n      });\n    }\n\n    eventSource.onerror = function() {\n      console.warn(\"Error while getting player\");\n      eventSource.close();\n    }\n  }, []);\n\n  const orderSortHandler = () => {\n    setIsByGrowthSort(() => {\n      sessionStorage.setItem('orderSort', JSON.stringify(!isByGrowthSort));\n\n      return !isByGrowthSort;\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <TablePlayers\n        preparedPlayers={[...players.sort((a, b) => isByGrowthSort ? a.score - b.score : b.score - a.score)]}\n        isByGrowthSort={isByGrowthSort}\n        orderSortHandler={orderSortHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}